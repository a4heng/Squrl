{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./electron/main.ts","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":["mainWindow","createWindow","BrowserWindow","width","height","icon","webPreferences","nodeIntegration","process","platform","app","dock","setIcon","loadURL","on","allowRendererProcessReuse"],"mappings":";QAAA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;QACA;QACA;;;QAGA;;QAEA;QACA,iCAAiC;QACjC;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,8DAA8D;QAC9D;QACA;QACA;QACA,2FAA2F,kBAAkB;QAC7G;QACA;QACA;QACA;QACA;QACA,qBAAqB,qBAAqB;QAC1C;QACA;QACA;QACA;QACA,iBAAiB,sBAAsB;QACvC;QACA,OAAO;QACP,MAAM;QACN;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA,cAAc;QACd,IAAI;QACJ;;;QAGA;QACA;;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA,IAAIA,UAAJ;;AAEA,SAASC,YAAT,GAAwB;AACtBD,YAAU,GAAG,IAAIE,sDAAJ,CAAkB;AAC7BC,SAAK,EAAE,IADsB;AAE7BC,UAAM,EAAE,IAFqB;AAG7BC,QAAI,EAAE,uBAHuB;AAI7BC,kBAAc,EAAE;AACdC,qBAAe,EAAE;AADH;AAJa,GAAlB,CAAb,CADsB,CAStB;;AACA,MAAIC,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AACjCC,gDAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,uBAAjB;AACD;;AACD,MAAIJ,IAAJ,EAA4C;AAC1CR,cAAU,CAACa,OAAX;AACD,GAFD,MAEO,EAQN;;AACDb,YAAU,CAACc,EAAX,CAAc,QAAd,EAAwB,YAAM;AAC5Bd,cAAU,GAAG,IAAb;AACD,GAFD;AAGD;;AAEDU,4CAAG,CAACI,EAAJ,CAAO,OAAP,EAAgBb,YAAhB;AACAS,4CAAG,CAACK,yBAAJ,GAAgC,IAAhC,C;;;;;;;;;;;ACtCA,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// ReadFile + VM.run chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n \t\t\t// array of [resolve, reject, promise] means \"currently loading\"\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// load the chunk and return promise to it\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t\tvar filename = require('path').join(__dirname, \"/\" + ({}[chunkId]||chunkId) + \".js\");\n \t\t\t\t\trequire('fs').readFile(filename, 'utf-8',  function(err, content) {\n \t\t\t\t\t\tif(err) return reject(err);\n \t\t\t\t\t\tvar chunk = {};\n \t\t\t\t\t\trequire('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\n})', filename)(chunk, require, require('path').dirname(filename), filename);\n \t\t\t\t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\t\t\t\tfor(var moduleId in moreModules) {\n \t\t\t\t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t\t\t\t}\n \t\t\t\t\t\tvar callbacks = [];\n \t\t\t\t\t\tfor(var i = 0; i < chunkIds.length; i++) {\n \t\t\t\t\t\t\tif(installedChunks[chunkIds[i]])\n \t\t\t\t\t\t\t\tcallbacks = callbacks.concat(installedChunks[chunkIds[i]][0]);\n \t\t\t\t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tfor(i = 0; i < callbacks.length; i++)\n \t\t\t\t\t\t\tcallbacks[i]();\n \t\t\t\t\t});\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./electron/main.ts\");\n","import { app, BrowserWindow } from \"electron\";\nimport installExtension, {REACT_DEVELOPER_TOOLS} from \"electron-devtools-installer\"\nimport * as path from \"path\";\nimport * as url from \"url\";\nimport('react-devtools-electron')\n\nlet mainWindow: Electron.BrowserWindow | null;\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 1600,\n    height: 1400,\n    icon: \"./assets/templogo.png\",\n    webPreferences: {\n      nodeIntegration: true,\n    },\n  });\n  //macOS dock settings for logo\n  if (process.platform === 'darwin') {\n    app.dock.setIcon(\"./assets/templogo.png\");\n  }\n  if (process.env.NODE_ENV === \"development\") {\n    mainWindow.loadURL(`http://localhost:3000`);\n  } else {\n    mainWindow.loadURL(\n      url.format({\n        pathname: path.join(__dirname, \"../index.html\"),\n        protocol: \"file:\",\n        slashes: true,\n      })\n    );\n  }\n  mainWindow.on(\"closed\", () => {\n    mainWindow = null;\n  });\n}\n\napp.on(\"ready\", createWindow);\napp.allowRendererProcessReuse = true;\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}