{"version":3,"sources":["webpack:///./node_modules/react-devtools-electron/dist sync ^.*\\/manifest\\.json$","webpack:///./node_modules/react-devtools-electron/dist/index.js","webpack:///./node_modules/react-devtools-electron/dist/utils.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,6G;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,0BAAU;AACnC,cAAc,mBAAO,CAAC,qEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA,iDAAa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,kBAAM;AAC3B,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;AACA,wBAAwB,yGAAQ,gBAAgB,gBAAgB,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"0.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/react-devtools-electron/dist sync recursive ^.*\\\\/manifest\\\\.json$\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar electron_1 = require(\"electron\");\nvar utils_1 = require(\"./utils\");\nexports.addReactDevToolsExtension = utils_1.addReactDevToolsExtension;\nexports.removeReactDevToolsExtension = utils_1.removeReactDevToolsExtension;\nif (electron_1.app.isReady()) {\n    utils_1.addReactDevToolsExtension();\n}\nelse {\n    electron_1.app.once('ready', utils_1.addReactDevToolsExtension);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_1 = require(\"path\");\nvar electron_1 = require(\"electron\");\nvar extensionPath = path_1.join(__dirname, '..', 'extension');\nvar extensionManifest = require(extensionPath + \"/manifest.json\");\nfunction addReactDevToolsExtension() {\n    var extensions = electron_1.BrowserWindow.getDevToolsExtensions();\n    var installedExtension = extensions[extensionManifest.name];\n    if (!installedExtension) {\n        electron_1.BrowserWindow.addDevToolsExtension(extensionPath);\n    }\n    else if (installedExtension.version !== extensionManifest.version) {\n        removeReactDevToolsExtension();\n        electron_1.BrowserWindow.addDevToolsExtension(extensionPath);\n    }\n}\nexports.addReactDevToolsExtension = addReactDevToolsExtension;\nfunction removeReactDevToolsExtension() {\n    electron_1.BrowserWindow.addDevToolsExtension(extensionPath);\n}\nexports.removeReactDevToolsExtension = removeReactDevToolsExtension;\n"],"sourceRoot":""}